plot(delta.ndvi)
delta.ndvi
#if error - the data is not snapped
plot(delta.ndvi)
delta.ndvi
# Title:  CompareGEE.R
# 28 Jan 2020
# Author: Tim Assal
#code will load mask of AOI; code will add all spectral bands and indices; then load NDVI from GEE and compare
library(sp)      #classes and methods for spatial data library
library(rgdal)   #Geospatial Data Abstraction Library
library(raster)  #Geographic data analysis and modeling library
library(stringr) #strip filename
library(ggplot2)
library(spdep)  # Load the spdep library
library(lattice) #lattice package
library(plyr)
library(reshape2)
library(Rmisc)
library(rgeos)
library(dplyr)
library(sf)
########
#1. Load AOI - extent for working grids
#######
JME.AOI<-raster("SourceData/Mask/JME_AOI.tif")
plot(JME.AOI)
#JME.AOI.extended<-raster("JME_AOI_extension.tif")
#plot(JME.AOI.extended)
##load subset AOI
#JME.AOI.sub<-raster("JME_Subset_AOI_Run3.tif")
#plot(JME.AOI.sub)
#combine to clip
#JME.AOI<-JME.AOI.full*JME.AOI.sub
#plot(JME.AOI)
#JME.AOI<-JME.AOI.extended #assign AOI to the extended version
#plot(JME.AOI.full)
#set crop mask to same as JME.AOI - but leave in here to match the code
mask.c<-JME.AOI
plot(mask.c)
library(sp)      #classes and methods for spatial data library
library(rgdal)   #Geospatial Data Abstraction Library
library(raster)  #Geographic data analysis and modeling library
library(stringr) #strip filename
########
#1. Load AOI - extent for working grids
#######
JME.AOI<-raster("SourceData/Mask/JME_AOI.tif")
plot(JME.AOI)
#JME.AOI.extended<-raster("JME_AOI_extension.tif")
#plot(JME.AOI.extended)
##load subset AOI
#JME.AOI.sub<-raster("JME_Subset_AOI_Run3.tif")
#plot(JME.AOI.sub)
#combine to clip
#JME.AOI<-JME.AOI.full*JME.AOI.sub
#plot(JME.AOI)
#JME.AOI<-JME.AOI.extended #assign AOI to the extended version
#plot(JME.AOI.full)
#set crop mask to same as JME.AOI - but leave in here to match the code
mask.c<-JME.AOI
plot(mask.c)
######
#Load ndvi from each directory
ndvi.name<- list.files(pattern="*_ndvi.tif", full.names=F, recursive=FALSE)
print(ndvi.name)
EE.ndvi<-raster(ndvi.name)
#Load ndvi from each directory
ndvi.name<- list.files(pattern="*_ndvi.tif", full.names=F, recursive=FALSE)
print(ndvi.name)
#Load ndvi from each directory
ndvi.name<- list.files(path="SourceData/OLI/", pattern="*_ndvi.tif", full.names=F, recursive=FALSE)
print(ndvi.name)
EE.ndvi<-raster(ndvi.name)
print(ndvi.name)
EE.ndvi<-raster(ndvi.name)
#Load ndvi from each directory
ndvi.name<- list.files(path="SourceData/OLI/", pattern="*_ndvi.tif", full.names=F, recursive=FALSE)
print(ndvi.name)
EE.ndvi<-raster(ndvi.name)
#Load ndvi from each directory
ndvi.name<- raster(list.files(path="SourceData/OLI/", pattern="*_ndvi.tif", full.names=F, recursive=FALSE))
print(ndvi.name)
EE.ndvi<-raster(path="SourceData/OLI/",ndvi.name)
?raster
#set working dir to external hard drive
#not great practice, but I need to drill down to the OLI folder for my old code to work.
#in most cases, there would be many sat images in that dir with multiple bands and indices
setwd("/SourceData/OLI")
getwd()
test<-paste("SourceData/OLI/", ndvi.name)
test
print(ndvi.name)
test<-paste("SourceData/OLI/", ndvi.name, sep="")
test
test<-raster(paste("SourceData/OLI/", ndvi.name, sep=""))
test
EE.ndvi<-raster(paste("SourceData/OLI/", ndvi.name, sep=""))
plot(EE.ndvi)
#get CFmask and assign CFmask by name (called BQA in this version of OLI)
CFmask <- list.files(path="SourceData/OLI/", pattern="*pixel_qa.tif$", full.names=F, recursive=FALSE)
print(CFmask)
#assign to raster class
CFmask1<-raster(paste("SourceData/OLI/", CFmask, sep=""))
#crop to AOI
CFmask.c<-CFmask1*mask.c
#reclassify Fmask from Landsat- output is 0 and NoData
#values 322 and 386 are clear pixels - those are the only two values that will be set to 0; all others = NA
CFmask.r<-reclassify(CFmask.c, c(-Inf, 321, NA, 321, 322, 0, 323, 385, NA, 385, 386, 0, 387, Inf, NA))
CFmask.r
plot(CFmask.r)
#apply mask - add layers together (including original mask. Areas of 0 remain same, areas of NA in mask become   NA in NDVI
ndvi.mask<-EE.ndvi+CFmask.r #I removed the orignal mask
plot(ndvi.mask)
#crop to AOI
EE.ndvi.c<-ndvi.mask*JME.AOI
plot(EE.ndvi)
plot(EE.ndvi.c)
mask.c<-crop(JME.AOI, extent(350000, 360000, 3960000, 3980000))
plot(mask.c)
plot(JME.AOI)
mask.c<-crop(JME.AOI, extent(380000, 390000, 3960000, 3980000))
plot(mask.c)
plot(JME.AOI)
mask.c<-crop(JME.AOI, extent(380000, 390000, 3940000, 3960000))
plot(mask.c)
#Load ndvi
ndvi.name<- list.files(path="SourceData/OLI/", pattern="*_ndvi.tif", full.names=F, recursive=FALSE)
print(ndvi.name)
EE.ndvi<-raster(paste("SourceData/OLI/", ndvi.name, sep=""))
plot(EE.ndvi)
#get CFmask and assign CFmask by name (called BQA in this version of OLI)
CFmask <- list.files(path="SourceData/OLI/", pattern="*pixel_qa.tif$", full.names=F, recursive=FALSE)
print(CFmask)
#assign to raster class
CFmask1<-raster(paste("SourceData/OLI/", CFmask, sep=""))
#crop to AOI
CFmask.c<-CFmask1*mask.c
#reclassify Fmask from Landsat- output is 0 and NoData
#values 322 and 386 are clear pixels - those are the only two values that will be set to 0; all others = NA
CFmask.r<-reclassify(CFmask.c, c(-Inf, 321, NA, 321, 322, 0, 323, 385, NA, 385, 386, 0, 387, Inf, NA))
CFmask.r
plot(CFmask.r)
#apply mask - add layers together (including original mask. Areas of 0 remain same, areas of NA in mask become   NA in NDVI
ndvi.mask<-EE.ndvi+CFmask.r #I removed the orignal mask
plot(ndvi.mask)
#crop to AOI
EE.ndvi.c<-ndvi.mask*JME.AOI
plot(EE.ndvi.c)
writeRaster(mask.c,filename="SourceData/Mask/JME_AOI_subset", format="GTiff", dataType='FLT4S',overwrite=TRUE)
writeRaster(mask.c,filename="SourceData/Mask/JME_AOI_subset", format="GTiff", datatype='FLT4S',overwrite=TRUE)
writeRaster(EE.ndvi,filename="SourceData/OLI/ndvi", format="GTiff", dataType='FLT4S',overwrite=TRUE)
writeRaster(EE.ndvi.c,filename="SourceData/OLI/ndvi", format="GTiff", datatype='FLT4S',overwrite=TRUE)
plot(CFmask.r)
plot(CFmask.c)
writeRaster(CFmask.c,filename="SourceData/OLI/pixel_qu", format="GTiff", datatype='FLT4S',overwrite=TRUE)
########################
#I created a GEE ndvi layer using the CompareGEEtoR
#see the notes at the beginning of that script with respect to projections, etc.
GEE.ndvi<-raster("SourceData/GEE/GEE_ndvi20161011.tif")
plot(GEE.ndvi)
st_crs(GEE.ndvi)
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-mask.c*GEE.ndvi
plot(GEE.ndvi.C)
########
#1. Load AOI - extent for working grids
#######
JME.AOI<-raster("SourceData/Mask/JME_AOI_subset.tif")
plot(JME.AOI)
#Load ndvi
ndvi.name<- list.files(path="SourceData/OLI/", pattern="*_ndvi.tif", full.names=F, recursive=FALSE)
print(ndvi.name)
EE.ndvi<-raster(paste("SourceData/OLI/", ndvi.name, sep=""))
plot(EE.ndvi)
#Load ndvi
ndvi.name<- list.files(path="SourceData/OLI/", pattern="*_ndvi.tif", full.names=F, recursive=FALSE)
print(ndvi.name)
EE.ndvi<-raster(paste("SourceData/OLI/", ndvi.name, sep=""))
plot(EE.ndvi)
#get CFmask and assign CFmask by name (called BQA in this version of OLI)
CFmask <- list.files(path="SourceData/OLI/", pattern="*pixel_qa.tif$", full.names=F, recursive=FALSE)
print(CFmask)
#assign to raster class
CFmask1<-raster(paste("SourceData/OLI/", CFmask, sep=""))
plot(CFmask.r)
plot(CFmask)
plot(CFmask.c)
#crop to AOI
CFmask.c<-CFmask1*JME.AOI
#reclassify Fmask from Landsat- output is 0 and NoData
#values 322 and 386 are clear pixels - those are the only two values that will be set to 0; all others = NA
CFmask.r<-reclassify(CFmask.c, c(-Inf, 321, NA, 321, 322, 0, 323, 385, NA, 385, 386, 0, 387, Inf, NA))
CFmask.r
plot(CFmask.r)
#apply mask - add layers together (including original mask. Areas of 0 remain same, areas of NA in mask become   NA in NDVI
ndvi.mask<-EE.ndvi+CFmask.r #I removed the orignal mask
plot(ndvi.mask)
#crop to AOI
EE.ndvi.c<-ndvi.mask*JME.AOI
plot(EE.ndvi.c)
########################
#I created a GEE ndvi layer using the CompareGEEtoR
#see the notes at the beginning of that script with respect to projections, etc.
GEE.ndvi<-raster("SourceData/GEE/GEE_ndvi20161011.tif")
plot(GEE.ndvi)
st_crs(GEE.ndvi)
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-mask.c*GEE.ndvi
plot(GEE.ndvi.C)
#scale to match ndvi
GEE.ndvi.C2<-GEE.ndvi.C*10000
#must round so the numbers match both formulas
GEE.ndvi.C3<-round(GEE.ndvi.C2, digits = 0)
# #must reproject to same projection as ndvi.S
# GEE.ndvi.R<-projectRaster(GEE.ndvi, crs=crs(ndvi.S), res=30)
# st_crs(GEE.ndvi.R)
# GEE.ndvi
#GEE.ndvi
######
#Band math to compare
######
ndvi.S
GEE.ndvi
par(mfrow=c(1,2))
# #must reproject to same projection as ndvi.S
# GEE.ndvi.R<-projectRaster(GEE.ndvi, crs=crs(ndvi.S), res=30)
# st_crs(GEE.ndvi.R)
# GEE.ndvi
#GEE.ndvi
######
#Band math to compare
######
GEE.ndvi
par(mfrow=c(1,2))
plot(ndvi.S)
plot(GEE.ndvi.C2)
delta.ndvi<-GEE.ndvi.C3-ndvi.S
par(mfrow=c(1,2))
plot(GEE.ndvi.C2)
delta.ndvi<-GEE.ndvi.C3-ndvi.S
delta.ndvi<-GEE.ndvi.C3-EE.ndvi.c
#if error - the data is not snapped
plot(delta.ndvi)
delta.ndvi
GEE.ndvi
# #must reproject to same projection as ndvi.S
# GEE.ndvi.R<-projectRaster(GEE.ndvi, crs=crs(ndvi.S), res=30)
# st_crs(GEE.ndvi.R)
# GEE.ndvi
#GEE.ndvi
######
#Band math to compare
######
GEE.ndvi
par(mfrow=c(1,2))
plot(GEE.ndvi.C2)
plot(GEE.ndvi)
plot(GEE.ndvi.C)
plot(EE.ndvi.c)
#scale to match ndvi
GEE.ndvi.C2<-GEE.ndvi.C*10000
#must round so the numbers match both formulas
GEE.ndvi.C3<-round(GEE.ndvi.C2, digits = 0)
# #must reproject to same projection as ndvi.S
# GEE.ndvi.R<-projectRaster(GEE.ndvi, crs=crs(ndvi.S), res=30)
# st_crs(GEE.ndvi.R)
# GEE.ndvi
#GEE.ndvi
######
#Band math to compare
######
GEE.ndvi
par(mfrow=c(1,2))
plot(GEE.ndvi.C2)
delta.ndvi<-GEE.ndvi.C3-EE.ndvi.c
#if error - the data is not snapped
plot(delta.ndvi)
delta.ndvi
plot(GEE.ndvi)
########################
#I created a GEE ndvi layer using the CompareGEEtoR
#see the notes at the beginning of that script with respect to projections, etc.
GEE.ndvi<-raster("SourceData/GEE/GEE_ndvi20161011_subset.tif")
plot(GEE.ndvi)
########################
#I created a GEE ndvi layer using the CompareGEEtoR
#see the notes at the beginning of that script with respect to projections, etc.
GEE.ndvi<-raster("SourceData/GEE/GEE_ndvi20161011.tif")
plot(GEE.ndvi)
st_crs(GEE.ndvi)
library(sf)
########################
#I created a GEE ndvi layer using the CompareGEEtoR
#see the notes at the beginning of that script with respect to projections, etc.
GEE.ndvi<-raster("SourceData/GEE/GEE_ndvi20161011.tif")
plot(GEE.ndvi)
st_crs(GEE.ndvi)
GEE.ndvi
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-mask.c*GEE.ndvi
plot(GEE.ndvi.C)
#scale to match ndvi
GEE.ndvi.C2<-GEE.ndvi.C*10000
#must round so the numbers match both formulas
GEE.ndvi.C3<-round(GEE.ndvi.C2, digits = 0)
# #must reproject to same projection as ndvi.S
# GEE.ndvi.R<-projectRaster(GEE.ndvi, crs=crs(ndvi.S), res=30)
# st_crs(GEE.ndvi.R)
# GEE.ndvi
#GEE.ndvi
######
#Band math to compare
######
GEE.ndvi
par(mfrow=c(1,2))
plot(GEE.ndvi.C2)
delta.ndvi<-GEE.ndvi.C3-EE.ndvi.c
#if error - the data is not snapped
plot(delta.ndvi)
delta.ndvi
plot(EE.ndvi.c)
plot(GEE.ndvi)
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-mask.c*GEE.ndvi
plot(GEE.ndvi.C)
plot(EE.ndvi.c)
plot(EE.ndvi.c)
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-GEE.ndvi*JME.AOI
plot(GEE.ndvi.C)
plot(GEE.ndvi)
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-GEE.ndvi*JME.AOI
plot(GEE.ndvi.C)
########
#1. Load AOI - extent for working grids
#######
JME.AOI<-raster("SourceData/Mask/JME_AOI_subset.tif")
plot(JME.AOI)
#Load ndvi
ndvi.name<- list.files(path="SourceData/OLI/", pattern="*_ndvi.tif", full.names=F, recursive=FALSE)
print(ndvi.name)
EE.ndvi<-raster(paste("SourceData/OLI/", ndvi.name, sep=""))
plot(EE.ndvi)
#get CFmask and assign CFmask by name (called BQA in this version of OLI)
CFmask <- list.files(path="SourceData/OLI/", pattern="*pixel_qa.tif$", full.names=F, recursive=FALSE)
print(CFmask)
#assign to raster class
CFmask1<-raster(paste("SourceData/OLI/", CFmask, sep=""))
#crop to AOI
CFmask.c<-CFmask1*JME.AOI
#reclassify Fmask from Landsat- output is 0 and NoData
#values 322 and 386 are clear pixels - those are the only two values that will be set to 0; all others = NA
CFmask.r<-reclassify(CFmask.c, c(-Inf, 321, NA, 321, 322, 0, 323, 385, NA, 385, 386, 0, 387, Inf, NA))
CFmask.r
plot(CFmask.r)
#apply mask - add layers together (including original mask. Areas of 0 remain same, areas of NA in mask become   NA in NDVI
ndvi.mask<-EE.ndvi+CFmask.r #I removed the orignal mask
plot(ndvi.mask)
#crop to AOI
EE.ndvi.c<-ndvi.mask*JME.AOI
plot(EE.ndvi.c)
########################
#I created a GEE ndvi layer using the CompareGEEtoR
#see the notes at the beginning of that script with respect to projections, etc.
GEE.ndvi<-raster("SourceData/GEE/GEE_ndvi20161011.tif")
plot(GEE.ndvi)
st_crs(GEE.ndvi)
GEE.ndvi
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-GEE.ndvi*JME.AOI
plot(GEE.ndvi.C)
plot(JME.AOI)
########################
#I created a GEE ndvi layer using the CompareGEEtoR
#see the notes at the beginning of that script with respect to projections, etc.
GEE.ndvi<-raster("SourceData/GEE/GEE_ndvi20161011.tif")
plot(GEE.ndvi)
st_crs(GEE.ndvi)
#crop to AOI
CFmask.c<-CFmask1*JME.AOI
#get CFmask and assign CFmask by name (called BQA in this version of OLI)
CFmask <- list.files(path="SourceData/OLI/", pattern="*pixel_qa.tif$", full.names=F, recursive=FALSE)
print(CFmask)
#assign to raster class
CFmask1<-raster(paste("SourceData/OLI/", CFmask, sep=""))
#crop to AOI
CFmask.c<-CFmask1*JME.AOI
plot(CFmask1)
plot(CFmask.c)
plot(CFmask.r)
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-GEE.ndvi*JME.AOI
plot(GEE.ndvi.C)
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-GEE.ndvi*CFmask.c
plot(GEE.ndvi.C)
plot(EE.ndvi)
########################
#I created a GEE ndvi layer using the CompareGEEtoR
#see the notes at the beginning of that script with respect to projections, etc.
GEE.ndvi<-raster("SourceData/GEE/GEE_ndvi20161011.tif")
plot(GEE.ndvi)
EE.ndvi
GEE.ndvi
########
#1. Load AOI - extent for working grids
#######
JME.AOI<-raster("SourceData/Mask/JME_AOI_subset.tif")
plot(JME.AOI)
#Load ndvi
ndvi.name<- list.files(path="SourceData/OLI/", pattern="*_ndvi.tif", full.names=F, recursive=FALSE)
print(ndvi.name)
EE.ndvi<-raster(paste("SourceData/OLI/", ndvi.name, sep=""))
plot(EE.ndvi)
#get CFmask and assign CFmask by name (called BQA in this version of OLI)
CFmask <- list.files(path="SourceData/OLI/", pattern="*pixel_qa.tif$", full.names=F, recursive=FALSE)
print(CFmask)
#assign to raster class
CFmask1<-raster(paste("SourceData/OLI/", CFmask, sep=""))
plot(CFmask)
plot(CFmask)
plot(CFmask) #assign to raster class
#assign to raster class
CFmask1<-raster(paste("SourceData/OLI/", CFmask, sep=""))
#crop to AOI
CFmask.c<-CFmask1*JME.AOI
plot(CFmask.c)
#reclassify Fmask from Landsat- output is 0 and NoData
#values 322 and 386 are clear pixels - those are the only two values that will be set to 0; all others = NA
CFmask.r<-reclassify(CFmask.c, c(-Inf, 321, NA, 321, 322, 0, 323, 385, NA, 385, 386, 0, 387, Inf, NA))
CFmask.r
plot(CFmask.r)
#apply mask - add layers together (including original mask. Areas of 0 remain same, areas of NA in mask become   NA in NDVI
ndvi.mask<-EE.ndvi+CFmask.r #I removed the orignal mask
plot(ndvi.mask)
#crop to AOI
EE.ndvi.c<-ndvi.mask*JME.AOI
plot(EE.ndvi.c)
########################
#I created a GEE ndvi layer using the CompareGEEtoR
#see the notes at the beginning of that script with respect to projections, etc.
GEE.ndvi<-raster("SourceData/GEE/GEE_ndvi20161011.tif")
plot(GEE.ndvi)
st_crs(GEE.ndvi)
GEE.ndvi
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-GEE.ndvi*CFmask.r
plot(GEE.ndvi.C)
#scale to match ndvi
GEE.ndvi.C2<-GEE.ndvi.C*10000
#must round so the numbers match both formulas
GEE.ndvi.C3<-round(GEE.ndvi.C2, digits = 0)
# #must reproject to same projection as ndvi.S
# GEE.ndvi.R<-projectRaster(GEE.ndvi, crs=crs(ndvi.S), res=30)
# st_crs(GEE.ndvi.R)
# GEE.ndvi
#GEE.ndvi
######
#Band math to compare
######
GEE.ndvi
par(mfrow=c(1,2))
plot(GEE.ndvi.C2)
delta.ndvi<-GEE.ndvi.C3-EE.ndvi.c
plot(GEE.ndvi.C2)
#clip it to the master raster b/c it came in very large from GEE
GEE.ndvi.C<-GEE.ndvi+CFmask.r
plot(GEE.ndvi.C)
#scale to match ndvi
GEE.ndvi.C2<-GEE.ndvi.C*10000
#must round so the numbers match both formulas
GEE.ndvi.C3<-round(GEE.ndvi.C2, digits = 0)
# #must reproject to same projection as ndvi.S
# GEE.ndvi.R<-projectRaster(GEE.ndvi, crs=crs(ndvi.S), res=30)
# st_crs(GEE.ndvi.R)
# GEE.ndvi
#GEE.ndvi
######
#Band math to compare
######
GEE.ndvi
par(mfrow=c(1,2))
plot(GEE.ndvi.C2)
delta.ndvi<-GEE.ndvi.C3-EE.ndvi.c
#if error - the data is not snapped
plot(delta.ndvi)
delta.ndvi
delta.ndvi
plot(EE.ndvi.c)
plot(GEE.ndvi.C2)
plot(EE.ndvi.c)
plot(GEE.ndvi.C)
delta.ndvi<-GEE.ndvi.C-EE.ndvi.c
#if error - the data is not snapped
plot(delta.ndvi)
delta.ndvi
#if error - the data is not snapped
plot(delta.ndvi)
delta.ndvi
plot(EE.ndvi.c)
EE.ndvi.c
GEE.ndvi.C
# #scale to match ndvi
# GEE.ndvi.C2<-GEE.ndvi.C*10000
# #must round so the numbers match both formulas
GEE.ndvi.C2<-round(GEE.ndvi.C, digits = 0)
delta.ndvi<-GEE.ndvi.C2-EE.ndvi.c
#if error - the data is not snapped
plot(delta.ndvi)
delta.ndvi
